#include "ShrubberyCreationForm.hpp"
#include "Bureaucrat.hpp"
#include <fstream>

static const std::string Tree = 
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣝⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠉⣿⡿⣣⣽⣿⣶⣬⣻⣿⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣽⡿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣯⣏⣿⣶⣽⣿⣽⣿⣿⣿⡗⢋⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⠿⣟⣛⣂⣭⣭⣉⣈⡻⣿⣿⣌⠻⣿⣿⣿⣿⣾⡿⠿⣿⣽⣿⣿⣿⡷⣿⣿⢀⣿⣸⣿⡇⢸⣿⣿⣻⣿⣿⣿⣿⣿⡏⡙⢿⣿⣧⠺⣿⣯⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣷⣾⣿⣿⣿⣯⣙⡛⠻⠿⠎⣉⣿⣄⠈⢿⣿⣟⣱⣷⣾⢯⣿⣿⢟⣿⣿⣾⡏⠘⢿⣿⠋⣶⣾⣿⣿⣿⣿⢿⣿⣿⣿⣷⣶⣶⢹⣿⢠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣽⣯⣤⣙⠛⣵⣾⣿⣿⣿⣿⣷⣌⠹⣯⣭⣍⡃⣾⣿⣯⠘⣿⣿⣿⣇⠀⠓⣠⣾⣟⣽⡿⠛⣡⣤⠿⣟⣿⣷⣼⣿⣿⡾⢋⡿⠛⣿⣿⠟⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣯⡩⠼⢛⡛⠛⣭⣤⣶⣤⣤⣤⣌⣙⠛⠛⠁⢠⣿⣿⡟⣧⡈⢩⣥⣾⢟⣿⡏⠁⣴⣾⠿⢿⣭⣤⣤⣾⣽⣤⢞⡛⢋⣁⣬⣼⣍⣤⣾⠟⣿⣭⠖⠛⠛⠛⣻⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣧⣴⣿⣿⣿⣿⣯⣓⠨⣭⡍⠛⠛⠋⣠⣴⣶⣾⣍⠙⠟⠻⣶⡦⣉⣉⡉⠻⠿⣿⣿⣟⠲⣎⣉⠉⣩⣿⣿⣿⣙⡾⠟⢷⣮⣹⣿⣿⠃⠈⣭⣤⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣯⣭⣭⣟⣿⣷⣮⣟⠿⣟⢀⣷⣶⣯⡟⠿⣍⣛⠻⠽⠅⣀⠀⠰⠾⣿⣿⠿⠀⢠⣿⣿⣿⠀⢿⣿⣷⣷⣍⢻⣿⣯⠹⣶⠄⢹⣿⠿⢋⣠⣾⣿⣿⡿⠿⣿⠿⢿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⢟⣻⣤⣭⣭⣶⣼⡟⢿⣿⣿⣥⣶⣿⣿⣷⣄⣘⣛⢷⣄⠀⠀⣤⣤⣶⣿⣿⣿⡋⢀⣼⣿⣿⣿⣏⢈⣿⣿⡄⢠⣶⡇⢀⣴⣿⣷⣦⣭⠡⣾⣷⣦⡺⠟⢻⣿⣿⣿⣿⣿\n\
⣿⣯⣛⠻⠟⠿⢛⣟⡛⢛⣯⣾⣷⣭⣉⣡⡘⢷⣤⣝⠛⣾⣿⣵⣿⣦⡀⠈⢿⣿⣿⣋⣛⣿⣿⣌⡛⣿⠟⣿⡝⢛⣽⡦⠿⢟⣷⣿⣿⣿⡿⣫⣽⣷⡤⣤⣶⡿⣫⣥⣾⣿⣿⣿⣿\n\
⣿⣿⣯⡿⢿⣷⣯⣭⣷⣿⣿⠿⣛⡿⠿⠿⢿⣷⡌⠻⣷⣌⡻⠿⠿⢿⣇⠀⠈⠻⣿⣿⣿⣿⠿⣿⣏⡿⠚⢁⣤⠿⠋⠁⠐⠿⠿⠿⣟⣭⣤⡉⢛⠿⣿⣿⠟⣤⡈⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣾⣵⣾⣿⣿⡻⣏⣡⣶⣮⣭⣿⣟⣴⣾⣿⣿⣶⣌⠻⣿⣶⠾⢿⣿⣦⠀⠀⠈⣿⣻⣿⣴⣿⠀⠀⠼⠟⠁⣸⣷⡻⢶⣶⣦⢾⣿⣿⣿⣿⡈⣿⣶⣤⡾⣿⣿⣯⢩⣾⣿⣿⣿\n\
⣿⣿⣭⣿⣿⡯⣭⣾⣿⣿⣿⣿⣿⣿⣟⡿⣿⣿⣿⣿⣿⣷⣾⡻⢿⣖⠾⣿⣦⡀⠀⠈⠙⠿⠿⠃⠈⠁⠀⢐⣴⣿⣿⣿⣷⣶⣦⣄⢹⡿⢿⡿⣃⠉⢙⣟⣷⣝⣿⣿⣷⣿⣿⣿⣿\n\
⣿⣿⣿⣾⣿⣽⣿⣿⣿⣿⣿⣿⣿⣯⣫⣤⣬⣿⣟⠛⢛⣭⣴⣿⣤⡈⠛⠛⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣄⣐⠲⠶⣿⣿⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠫⣾⣷⣾⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⣶⣦⠀⠀⢀⣠⣤⢀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣷⣿⢨⣛⠻⠿⠒⣾⣿⣶⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣀⣰⣿⣿⠷⣤⣾⣿⣿⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣙⣿⡿⣷⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠉⠉⠉⢴⣿⣷⠉⠉⣴⡏⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢘⣿⣿⣮⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⢀⣠⣤⣄⡀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠻⣿⠀⣠⣾⣿⣿⣿⣿⣿⡾⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠿⠀⣿⠟⠁⠀⠀⠉⠻⣷⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠉⠉⠻⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠉⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠈⠙⠛⠛⠛⠛⠛⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠟⠋⠉⢉⣈⣥⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣾⣿⣿⣶⣦⣀⣉⣋⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⢿⣉⣤⣴⣤⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿";

ShrubberyCreationForm::ShrubberyCreationForm()
	: AForm("ShrubberyCreationForm", 145, 137) , m_target("Unnamed") {
}

ShrubberyCreationForm::ShrubberyCreationForm(const std::string& t)
	: AForm("ShrubberyCreationForm", 145, 137) , m_target(t) {
}

ShrubberyCreationForm::~ShrubberyCreationForm() {
}

ShrubberyCreationForm::ShrubberyCreationForm(const ShrubberyCreationForm& oth)
	: AForm(oth), m_target(oth.m_target) {
}

ShrubberyCreationForm&	ShrubberyCreationForm::operator=(const ShrubberyCreationForm& oth) {
	if (this != &oth) {
		AForm::operator=(oth);
		m_target = oth.m_target;
	}
	return *this;
}

void	ShrubberyCreationForm::execute(const Bureaucrat& bur) const {
	if (!getSigned())
		throw AForm::FormNotSignedException();
	if (bur.getGrade() > getGradeExecute())
		throw AForm::GradeTooLowException();
	std::ofstream	os((m_target + "_shrubbery").c_str());
	if (!os.is_open())
		throw std::ios_base::failure("Failed to open file");
	os << Tree << std::endl;
};

